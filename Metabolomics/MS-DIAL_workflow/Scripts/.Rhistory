# Libraries loading
library(MetaboAnalystR)
library(OptiLCMS)
sessionInfo()
?Export.Annotation
# Libraries loading
library(MetaboAnalystR)
?Export.Annotation
?Export
library(OptiLCMS)
?Export.Annotation
# Libraries loading
library(MetaboAnalystR)
library(OptiLCMS)
?PerformResultsExport
?FormatMSnAnnotation
ls
# Libraries loading
library(MetaboAnalystR)
library(OptiLCMS)
?PerformMSnImport
?PerformPeakProfiling
# Libraries loading
library(MetaboAnalystR)
library(OptiLCMS)
?PerformPeakProfiling
?SetPeakParam function
?SetPeakParam
?SetPeakParam
# Libraries loading
library(MetaboAnalystR)
library(OptiLCMS)
?SetPeakParam
# Libraries loading
library(MetaboAnalystR)
library(OptiLCMS)
?SetAnnotationParam
# Libraries loading
library(MetaboAnalystR)
library(OptiLCMS)
?PerformMSnImport
library(MetaboAnalystR)
?MSspec.ID
??MSspec.ID
library(MetaboAnalystR)
?Match.PeakTable
??Match.PeakTable
?PerformMSnImport
library(MSnbase)
?PerformMSnImport
library(mzR)
?PerformMSnImport
?xsAnnote
?xsAnnotate
?findChromPeaks
library(xcms)        # Peak detection & alignment
?findChromPeaks
library(xcms)        # Peak detection & alignment
library(MSnbase)     # Extract MS2 spectra
?findChromPeaks
library(xcms)        # Peak detection & alignment
library(CAMERA)      # Peak annotation (MS1-level)
library(MSnbase)     # Extract MS2 spectra
library(Spectra)
library(MsCoreUtils)
?chromPeaks
library(MetaboAnalystR)
?MatchSpectra
library(MetaboAnalystR)
# Define a vector of required packages
pkgs <- c('here', 'data.table', 'tidyverse', 'kableExtra', 'ggplot2', 'pmp', 'SummarizedExperiment', 'S4Vectors')
# For each of the packages, load it and display the version number
for (pkg in pkgs) {
suppressPackageStartupMessages(library(pkg, character.only = TRUE))
print(paste0(pkg, ': ', packageVersion(pkg)))
}
install.packages("ggplot2", version='1.3.1')
install.packages("ggplot2", version='3.3.5')
install.packages("data.table", version='1.14.0')
install.packages("data.table", version='1.14.0')
install.packages("tidyverse", version='1.3.1')
install.packages("kableExtra", version='1.3.4')
install.packages("ggplot2", version='3.3.5')
install.packages("pmp", version='1.2.1')
install.packages("pmp")
install.packages("data.table", version='1.14.0')
install.packages("data.table", version='1.14.0')
install.packages("here", version='1.0.1')
install.packages("pmp", version='1.2.1')
install.packages("ggplot2", version='3.3.5')
install.packages("tidyverse", version='1.3.1')
install.packages("kableExtra", version='1.3.4')
install.packages("tidyverse", version='1.3.1')
install.packages("SummarizedExperiment", version='1.20.0')
install.packages("S4Vectors", version='0.28.1')
library(devtools)
install.packages("devtools")
library(testthat)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("pmp", version = "1.2.1")
BiocManager::install("pmp")
library(pmp)
BiocManager::install("SummarizedExperiment")
install.packages("ggplot2", version='3.3.5')
# Define a vector of required packages
pkgs <- c('here', 'data.table', 'tidyverse', 'kableExtra', 'ggplot2', 'pmp', 'SummarizedExperiment', 'S4Vectors')
# For each of the packages, load it and display the version number
for (pkg in pkgs) {
suppressPackageStartupMessages(library(pkg, character.only = TRUE))
print(paste0(pkg, ': ', packageVersion(pkg)))
}
install.packages("randomForest")
BiocManager::install("randomForest")
BiocManager::install("impute")
install_github('computational-metabolomics/pmp')
BiocManager::install("randomForest")
install.packages("https://cran.r-project.org/src/contrib/Archive/randomForest/randomForest_4.6-14.tar.gz",repos=NULL, type="source")
library(pmp)
# Define a vector of required packages
pkgs <- c('here', 'data.table', 'tidyverse', 'kableExtra', 'ggplot2', 'pmp', 'SummarizedExperiment', 'S4Vectors')
# For each of the packages, load it and display the version number
for (pkg in pkgs) {
suppressPackageStartupMessages(library(pkg, character.only = TRUE))
print(paste0(pkg, ': ', packageVersion(pkg)))
}
BiocManager::install('pbkrtest')
install.packages("pbkrtest", version='0.5.0')
install.packages("pbkrtest", version='0.4.8')
install.packages("pbkrtest", version='0.4.7')
install.packages("pbkrtest", version='0.4')
install.packages("https://cran.r-project.org/src/contrib/Archive/pbkrtest/pbkrtest_0.4-7.tar.gz", repos=NULL, type="source")
install.packages("ggpubr")
install.packages("quantreg")
install.packages("MatrixModels")
install.packages("Matrix", version='1.6')
install.packages("MatrixModels")
library(Matrix, lib.loc = "C:/Program Files/R/R-4.0.5/library")
install.packages(c("bit", "bitops", "httr2", "matrixStats", "plyr", "RCurl", "readxl"))
#This work flow generate volcano plots and heat maps, for categorical groups
library(RColorBrewer)
setwd('C:\Users\49152\Desktop\Repositories\Multiomics_study\Metabolomics\MS-DIAL_workflow\Scripts')
setwd('C:/Users/49152/Desktop/Repositories/Multiomics_study/Metabolomics/MS-DIAL_workflow/Scripts')
metab_SE <- readRDS('C:/Users/49152/Downloads/Brain_trauma/annotated_qp.RDS')
View(metab_SE)
